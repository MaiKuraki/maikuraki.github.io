{
    "version": "https://jsonfeed.org/version/1",
    "title": "Cyclone Dimension",
    "subtitle": "",
    "icon": "http://example.com/assets/favicon.ico",
    "description": "",
    "home_page_url": "http://example.com",
    "items": [
        {
            "id": "http://example.com/2024/10/07/Unity_WebGL_Demo/",
            "url": "http://example.com/2024/10/07/Unity_WebGL_Demo/",
            "title": "Unity WebGL Demo",
            "date_published": "2024-10-07T15:11:21.659Z",
            "content_html": "<pre><code>本文是 Hexo 嵌入 Unity WebGL 的测试\n</code></pre>\n<h2 id=\"gameplay\"><a class=\"anchor\" href=\"#gameplay\">#</a> Gameplay</h2>\n<ul>\n<li>Control\n<ul>\n<li>Keyborad<pre><code>Movement:   W / A / D\nJump:       K\nAttack:     J\n</code></pre>\n</li>\n<li>Gamepad<pre><code>Movement:   Left Joystick\nJump:       A (XBox)\nAttack:     Y (XBox)\n</code></pre>\n</li>\n</ul>\n</li>\n</ul>\n<blockquote>\n<p>如果以下游戏窗口长时间显示黑屏可能需要 <strong>刷新浏览器</strong> 页面来确保游戏正常显示</p>\n</blockquote>\n<p>\n    <style>\n      .unity-wrapper {\n        width: 100%;\n        margin: 0 auto;\n        position: relative;\n      }\n      #unity-container {\n        width: 100%;\n        height: 0;\n        padding-bottom: 56.25%; /* 16:9 aspect ratio */\n        position: relative;\n      }\n      #unity-canvas {\n        position: absolute;\n        top: 0;\n        left: 0;\n        width: 100%;\n        height: 100%;\n        background: #231F20;\n      }\n      #loading-message {\n        position: absolute;\n        top: 50%;\n        left: 50%;\n        transform: translate(-50%, -50%);\n        color: white;\n        font-size: 24px;\n        display: none; /* Initially hidden */\n      }\n    </style>\n    <div class=\"unity-wrapper\">\n      <div id=\"unity-container\">\n        <canvas id=\"unity-canvas\" tabindex=\"-1\"></canvas>\n        <div id=\"loading-message\">Loading...</div>\n      </div>\n      <script>\n        function loadScript(src) {\n          return new Promise((resolve, reject) => {\n            const script = document.createElement('script');\n            script.src = src;\n            script.onload = resolve;\n            script.onerror = () => reject(new Error(`Failed to load script ${src}`));\n            document.head.appendChild(script);\n          });\n        }\n\n        function resizeCanvas() {\n          var canvas = document.querySelector(\"#unity-canvas\");\n          var container = document.querySelector(\"#unity-container\");\n\n          var containerWidth = container.clientWidth;\n          var containerHeight = container.clientHeight;\n          var aspectRatio = 16 / 9;\n\n          if (containerWidth / containerHeight > aspectRatio) {\n            canvas.style.width = (containerHeight * aspectRatio) + 'px';\n            canvas.style.height = containerHeight + 'px';\n          } else {\n            canvas.style.width = containerWidth + 'px';\n            canvas.style.height = (containerWidth / aspectRatio) + 'px';\n          }\n        }\n\n        async function loadUnity() {\n          try {\n            document.querySelector(\"#loading-message\").style.display = \"none\"; // Hide loading message\n            await createUnityInstance(document.querySelector(\"#unity-canvas\"), {\n              dataUrl: \"/game/CMRPG/Build/cmrpg.data\",\n              frameworkUrl: \"/game/CMRPG/Build/cmrpg.framework.js\",\n              codeUrl: \"/game/CMRPG/Build/cmrpg.wasm\",\n              streamingAssetsUrl: \"/game/CMRPG/StreamingAssets\",\n              companyName: \"\",\n              productName: \"\",\n              productVersion: \"1.0.0\",\n            });\n            console.log(\"Unity loaded successfully.\");\n          } catch (message) {\n            console.error(message);\n          }\n        }\n\n        async function initUnity() {\n          try {\n            document.querySelector(\"#loading-message\").style.display = \"block\"; // Show loading message\n            await loadScript(\"/game/CMRPG/Build/cmrpg.loader.js\");\n            console.log(\"cmrpg.loader.js loaded successfully.\");\n            await loadScript(\"/game/CMRPG/Build/cmrpg.framework.js\");\n            await loadScript(\"/game/CMRPG/Build/cmrpg.wasm\");\n            loadUnity();\n          } catch (error) {\n            console.error(error);\n          }\n        }\n\n        resizeCanvas();\n        window.addEventListener('resize', resizeCanvas);\n        window.addEventListener(\"load\", initUnity); // Use window.onload instead of DOMContentLoaded\n      </script>\n    </div>\n  </p>\n<h2 id=\"opensourceurl\"><a class=\"anchor\" href=\"#opensourceurl\">#</a> OpenSourceURL</h2>\n<pre><code>https://github.com/MaiKuraki/UnityGameplayAbilitySystemSample\n</code></pre>\n",
            "tags": []
        },
        {
            "id": "http://example.com/2024/10/07/Unity_Game_Build_Pipeline_with_TeamCity/",
            "url": "http://example.com/2024/10/07/Unity_Game_Build_Pipeline_with_TeamCity/",
            "title": "Unity 游戏自动化打包教程【TeamCity】",
            "date_published": "2024-10-07T12:35:14.128Z",
            "content_html": "<pre><code>本文目的在于为我们在日常的 Unity 开发过程中标准化构建游戏的发行版本。文章撰写于 2023.2 截至 2024.10 依旧有效，其中涉及到的软件版本均可使用 2024 最新版。\n</code></pre>\n<h2 id=\"software-environment-本文所需的系统平台及软件环境\"><a class=\"anchor\" href=\"#software-environment-本文所需的系统平台及软件环境\">#</a> Software Environment 本文所需的系统平台及软件环境</h2>\n<ul>\n<li>Windows\n<ul>\n<li>Docker</li>\n<li>Unity</li>\n<li>Wwise (Optional) 可选</li>\n</ul>\n</li>\n<li>Linux\n<ul>\n<li>不推荐在 Linux 平台使用 Unity 和 TeamCityAgent</li>\n<li>Linux 平台不支持 Wwise</li>\n<li>即使有一些编辑器脚本可以让 Wwise 代码在 Linux 平台正常编译，依然不推荐 Linux 平台作为 TeamCityAgent</li>\n</ul>\n</li>\n<li>MacOS\n<ul>\n<li>未测试</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"安装-docker\"><a class=\"anchor\" href=\"#安装-docker\">#</a> 安装 Docker</h2>\n<h3 id=\"官网\"><a class=\"anchor\" href=\"#官网\">#</a> 官网</h3>\n<p><a href=\"https://www.docker.com/products/docker-desktop/\">Docker Desktop</a></p>\n<h3 id=\"验证\"><a class=\"anchor\" href=\"#验证\">#</a> 验证</h3>\n<p>安装完成后，打开 docker-desktop，我们会看到 docker 的界面</p>\n<p><img loading=\"lazy\" data-src=\"https://cdn.jsdelivr.net/gh/maikuraki/jsdelivr@v0.0.6/docimg/UnityBuildPipelineTutorial/tutorial_01.png\" alt=\"Tutorial_01\" /></p>\n<p>在命令行输入以下命令 (Linux 平台需要加 sudo)</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"><span>h</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ <span class=\"token function\">docker</span> <span class=\"token function\">ps</span></pre></td></tr></table></figure><p>命令行会显示类似下图打印</p>\n<p><img loading=\"lazy\" data-src=\"https://cdn.jsdelivr.net/gh/maikuraki/jsdelivr@v0.0.6/docimg/UnityBuildPipelineTutorial/tutorial_02.png\" alt=\"Tutorial_02\" /></p>\n<h2 id=\"创建-docker-内部网络\"><a class=\"anchor\" href=\"#创建-docker-内部网络\">#</a> 创建 Docker 内部网络</h2>\n<p>此处创建 docker 内部的虚拟网络，目的是可以为每个容器分配一个固定的 ip，如果我们的设备在远程，可以方便的使用 <strong> <code>Nginx Proxy Manager</code> </strong> 反向代理到固定域名。</p>\n<p>在命令行输入以下命令 (Linux 平台需要加 sudo)</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"><span>h</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ <span class=\"token function\">docker</span> network create docker_net <span class=\"token parameter variable\">--subnet</span><span class=\"token operator\">=</span><span class=\"token number\">172.20</span>.0.0/16</pre></td></tr></table></figure><p>其中 <strong> <code>docker_net</code> </strong> 是 docker 内部新建网络的名字，可根据实际情况修改。</p>\n<h2 id=\"安装与配置-portainer\"><a class=\"anchor\" href=\"#安装与配置-portainer\">#</a> 安装与配置 Portainer</h2>\n<h3 id=\"安装-portainer-ce\"><a class=\"anchor\" href=\"#安装-portainer-ce\">#</a> 安装 Portainer-CE</h3>\n<p>Portainer 是一款图形化的 docker 管理工具，可以比较方便的管理和调整 docker</p>\n<p>在命令行输入命令安装 portainer-ce 注意此命令在命令行的一行中输入 (Linux 平台需要加 sudo)</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"><span>h</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ <span class=\"token function\">docker</span> run <span class=\"token parameter variable\">-d</span> <span class=\"token parameter variable\">-p</span> <span class=\"token number\">8000</span>:8000 <span class=\"token parameter variable\">-p</span> <span class=\"token number\">9000</span>:9000 <span class=\"token parameter variable\">-p</span> <span class=\"token number\">9443</span>:9443 <span class=\"token parameter variable\">--name</span> portainer <span class=\"token parameter variable\">--network</span> docker_net <span class=\"token parameter variable\">--ip</span> <span class=\"token number\">172.20</span>.0.2 <span class=\"token parameter variable\">--restart</span><span class=\"token operator\">=</span>always <span class=\"token parameter variable\">-v</span> /var/run/docker.sock:/var/run/docker.sock portainer/portainer-ce:linux-amd64-2.17.0</pre></td></tr></table></figure><p>命令中网络端口，portainer-ce 包的版本，ip，挂载路径可根据实际情况修改。此处 <strong> <code>docker_net</code> </strong> 是上文中创建出的 docker 内部网络</p>\n<h3 id=\"安装-portainer-agent\"><a class=\"anchor\" href=\"#安装-portainer-agent\">#</a> 安装 Portainer Agent</h3>\n<p>新版的 portainer 可能需要 portainer agent 才可正常添加内部环境<br />\n在命令行输入命令安装 portainer agent 注意此命令在命令行的一行中输入 (Linux 平台需要加 sudo)</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ <span class=\"token function\">docker</span> run <span class=\"token parameter variable\">-d</span> <span class=\"token parameter variable\">-p</span> <span class=\"token number\">9001</span>:9001 <span class=\"token parameter variable\">--name</span> portainer_agent <span class=\"token parameter variable\">--network</span> docker_net <span class=\"token parameter variable\">--ip</span> <span class=\"token number\">172.20</span>.0.3 <span class=\"token parameter variable\">--restart</span><span class=\"token operator\">=</span>always <span class=\"token parameter variable\">-v</span> /var/run/docker.sock:/var/run/docker.sock <span class=\"token parameter variable\">-v</span> /var/lib/docker/volumes:/var/lib/docker/volumes portainer/agent:2.17.0</pre></td></tr></table></figure><p>命令行安装完成后，可以在 docker-desktop 中查看运行状态</p>\n<p><img loading=\"lazy\" data-src=\"https://cdn.jsdelivr.net/gh/maikuraki/jsdelivr@v0.0.6/docimg/UnityBuildPipelineTutorial/tutorial_03.png\" alt=\"Tutorial_03\" /></p>\n<h3 id=\"在浏览器中配置-portainer\"><a class=\"anchor\" href=\"#在浏览器中配置-portainer\">#</a> 在浏览器中配置 Portainer</h3>\n<p>在浏览器中输入 <strong> <code>localhost:9000</code> </strong> 访问 portainer 管理界面 (9000 端口是上文中 portainer-ce 的对外端口)</p>\n<p>点击 <strong> <code>Get Started</code> </strong></p>\n<p><img loading=\"lazy\" data-src=\"https://cdn.jsdelivr.net/gh/maikuraki/jsdelivr@v0.0.6/docimg/UnityBuildPipelineTutorial/tutorial_04.png\" alt=\"Tutorial_04\" /></p>\n<p>点击 <strong> <code>Environments</code> </strong> -&gt; <strong> <code>Stacks</code> </strong> -&gt; <strong> <code>Add Stack</code> </strong> 创建容器配置</p>\n<p><img loading=\"lazy\" data-src=\"https://cdn.jsdelivr.net/gh/maikuraki/jsdelivr@v0.0.6/docimg/UnityBuildPipelineTutorial/tutorial_05.png\" alt=\"Tutorial_05\" /></p>\n<p><img loading=\"lazy\" data-src=\"https://cdn.jsdelivr.net/gh/maikuraki/jsdelivr@v0.0.6/docimg/UnityBuildPipelineTutorial/tutorial_06.png\" alt=\"Tutorial_06\" /></p>\n<p><img loading=\"lazy\" data-src=\"https://cdn.jsdelivr.net/gh/maikuraki/jsdelivr@v0.0.6/docimg/UnityBuildPipelineTutorial/tutorial_07.png\" alt=\"Tutorial_07\" /></p>\n<h2 id=\"安装与配置-gitlab-ce\"><a class=\"anchor\" href=\"#安装与配置-gitlab-ce\">#</a> 安装与配置 Gitlab-CE</h2>\n<h3 id=\"在-portainer-中安装-gitlab-ce\"><a class=\"anchor\" href=\"#在-portainer-中安装-gitlab-ce\">#</a> 在 Portainer 中安装 gitlab-ce</h3>\n<p>使用 docker-compose 在 Portainer 中安装 gitlab-ce</p>\n<p><img loading=\"lazy\" data-src=\"https://cdn.jsdelivr.net/gh/maikuraki/jsdelivr@v0.0.6/docimg/UnityBuildPipelineTutorial/tutorial_08.png\" alt=\"Tutorial_08\" /></p>\n<p><img loading=\"lazy\" data-src=\"https://cdn.jsdelivr.net/gh/maikuraki/jsdelivr@v0.0.6/docimg/UnityBuildPipelineTutorial/tutorial_09.png\" alt=\"Tutorial_09\" /></p>\n<p><img loading=\"lazy\" data-src=\"https://cdn.jsdelivr.net/gh/maikuraki/jsdelivr@v0.0.6/docimg/UnityBuildPipelineTutorial/tutorial_10.png\" alt=\"Tutorial_10\" /></p>\n<p>以下是 docker-compose yaml 内容</p>\n<figure class=\"highlight yaml\"><figcaption data-lang=\"YAML\"><span>l</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key atrule\">version</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"3.9\"</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token key atrule\">services</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token key atrule\">gitlab</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token key atrule\">image</span><span class=\"token punctuation\">:</span> gitlab/gitlab<span class=\"token punctuation\">-</span>ce<span class=\"token punctuation\">:</span>15.9.1<span class=\"token punctuation\">-</span>ce.0</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token key atrule\">container_name</span><span class=\"token punctuation\">:</span> gitlab</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token key atrule\">ports</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>      <span class=\"token punctuation\">-</span> <span class=\"token string\">\"8001:8001\"</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>      <span class=\"token punctuation\">-</span> <span class=\"token string\">\"8002:22\"</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token key atrule\">networks</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>      <span class=\"token key atrule\">docker_net</span><span class=\"token punctuation\">:</span> <span class=\"token comment\">## 此处 docker_net 对应上文中创建的网络名称</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token key atrule\">ipv4_address</span><span class=\"token punctuation\">:</span> 172.20.0.4</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token key atrule\">volumes</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>      <span class=\"token punctuation\">-</span> /d/Work/Docker/DockerProgram/gitlab/data<span class=\"token punctuation\">:</span>/var/opt/gitlab <span class=\"token comment\">## 此挂载路径在 Windows 中对应 D:\\Work\\Docker\\DockerProgram\\gitlab</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>      <span class=\"token punctuation\">-</span> /d/Work/Docker/DockerProgram/gitlab/logs<span class=\"token punctuation\">:</span>/var/log/gitlab</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>      <span class=\"token punctuation\">-</span> /d/Work/Docker/DockerProgram/gitlab/config<span class=\"token punctuation\">:</span>/etc/gitlab</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token key atrule\">shm_size</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'256m'</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token key atrule\">environment</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>      <span class=\"token key atrule\">GITLAB_OMNIBUS_CONFIG</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">|</span><span class=\"token scalar string\"></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        external_url 'http://localhost:8001'</pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        gitlab_rails['gitlab_shell_ssh_port'] = 8002</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token key atrule\">restart</span><span class=\"token punctuation\">:</span> always</pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token key atrule\">networks</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>  <span class=\"token key atrule\">docker_net</span><span class=\"token punctuation\">:</span> <span class=\"token comment\">## 此处 docker_net 对应上文中创建的网络名称</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> docker_net</pre></td></tr></table></figure><h3 id=\"配置使用-gitlab\"><a class=\"anchor\" href=\"#配置使用-gitlab\">#</a> 配置使用 Gitlab</h3>\n<p>在 gitlab 创建完成后，找到 gitlab 配置文件，查看 root 密码。上文中 yaml 中挂载了路径  <code>/d/Work/Docker/DockerProgram/gitlab/config</code> <br />\n 对应 Windows 磁盘中  <code>D:\\Work\\Docker\\DockerProgram\\gitlab\\config</code> , 访问路径找到文件  <code>initial_root_password</code>  以文本形式打开后找到 gitlab 初始 root 密码</p>\n<p><img loading=\"lazy\" data-src=\"https://cdn.jsdelivr.net/gh/maikuraki/jsdelivr@v0.0.6/docimg/UnityBuildPipelineTutorial/tutorial_11.png\" alt=\"Tutorial_11\" /></p>\n<p>在浏览器中输入 localhost:8001 (8001 端口是上文中 gitlab 的对外端口) 访问 gitlab 主页，请使用账号  <code>root</code>  与  <code>initial_root_password</code>  文件中查到的密码进行首次登录。请自行创建私有账号和新的空项目</p>\n<h3 id=\"创建和上传游戏项目\"><a class=\"anchor\" href=\"#创建和上传游戏项目\">#</a> 创建和上传游戏项目</h3>\n<p>在本地创建游戏项目并上传至 gitlab</p>\n<p><img loading=\"lazy\" data-src=\"https://cdn.jsdelivr.net/gh/maikuraki/jsdelivr@v0.0.6/docimg/UnityBuildPipelineTutorial/tutorial_12.png\" alt=\"Tutorial_12\" /></p>\n<p>项目结构</p>\n<pre><code>&lt;root&gt;\n    ├─DemoGame_Unity\n    |       ├─Assets\n    |       |   ├─Editor\n    |       |   |   └─BuildScript.cs\n    |       |   ├─Scene\n    |       |   |   └─SampleScene.unity\n    |       |   └─...\n    |       └─...\n    ├─DemoGame_Wwise\n    |       └─...\n    └─README.md\n</code></pre>\n<p><code>BuildScript.cs</code>  <strong>必须</strong>存放在 Unity 项目 Assets/Editor 路径下，目的是可以在 TeamCity 里拿到它</p>\n<figure class=\"highlight cs\"><figcaption data-lang=\"C#\"><span>s</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">using</span> <span class=\"token namespace\">System<span class=\"token punctuation\">.</span>Collections<span class=\"token punctuation\">.</span>Generic</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">using</span> <span class=\"token namespace\">System<span class=\"token punctuation\">.</span>IO</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">using</span> <span class=\"token namespace\">UnityEditor</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">using</span> <span class=\"token namespace\">UnityEditor<span class=\"token punctuation\">.</span>Build<span class=\"token punctuation\">.</span>Reporting</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">using</span> <span class=\"token namespace\">UnityEngine</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">namespace</span> <span class=\"token namespace\">DemoGame<span class=\"token punctuation\">.</span>Editor</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">BuildScript</span> <span class=\"token punctuation\">:</span> <span class=\"token type-list\"><span class=\"token class-name\">MonoBehaviour</span></span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token keyword\">private</span> <span class=\"token keyword\">const</span> <span class=\"token class-name\"><span class=\"token keyword\">string</span></span> DEBUG_FLAG <span class=\"token operator\">=</span> <span class=\"token string\">\"[Game Builder]\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token keyword\">private</span> <span class=\"token keyword\">const</span> <span class=\"token class-name\"><span class=\"token keyword\">string</span></span> INVALID_FLAG <span class=\"token operator\">=</span> <span class=\"token string\">\"INVALID\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token keyword\">private</span> <span class=\"token keyword\">const</span> <span class=\"token class-name\"><span class=\"token keyword\">string</span></span> ApplicationName <span class=\"token operator\">=</span> <span class=\"token string\">\"DemoGame\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token keyword\">private</span> <span class=\"token keyword\">const</span> <span class=\"token class-name\"><span class=\"token keyword\">string</span></span> OutputBasePath <span class=\"token operator\">=</span> <span class=\"token string\">\"Build\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token keyword\">private</span> <span class=\"token keyword\">const</span> <span class=\"token class-name\"><span class=\"token keyword\">string</span></span> OutputPath_Android <span class=\"token operator\">=</span> <span class=\"token string\">\"Android\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token keyword\">private</span> <span class=\"token keyword\">const</span> <span class=\"token class-name\"><span class=\"token keyword\">string</span></span> OutputPath_Windows <span class=\"token operator\">=</span> <span class=\"token string\">\"Windows\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">MenuItem</span><span class=\"token attribute-arguments\"><span class=\"token punctuation\">(</span><span class=\"token string\">\"Build/Build Android APK (IL2CPP)\"</span><span class=\"token punctuation\">)</span></span></span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">PerformBuild_AndroidAPK</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>            EditorUserBuildSettings<span class=\"token punctuation\">.</span>exportAsGoogleAndroidProject <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>            <span class=\"token function\">PerformBuild</span><span class=\"token punctuation\">(</span>BuildTarget<span class=\"token punctuation\">.</span>Android<span class=\"token punctuation\">,</span> BuildTargetGroup<span class=\"token punctuation\">.</span>Android<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>                ScriptingImplementation<span class=\"token punctuation\">.</span>IL2CPP<span class=\"token punctuation\">,</span> <span class=\"token interpolation-string\"><span class=\"token string\">$\"</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span><span class=\"token expression language-csharp\">OutputPath_Android</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">/</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span><span class=\"token expression language-csharp\">ApplicationName</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">.apk\"</span></span><span class=\"token punctuation\">,</span> <span class=\"token named-parameter punctuation\">bCleanBuild</span><span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>                <span class=\"token named-parameter punctuation\">bOutputIsFolderTarget</span><span class=\"token punctuation\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>        <span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">MenuItem</span><span class=\"token attribute-arguments\"><span class=\"token punctuation\">(</span><span class=\"token string\">\"Build/Build Windows (IL2CPP)\"</span><span class=\"token punctuation\">)</span></span></span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">PerformBuild_Windows</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>            <span class=\"token function\">PerformBuild</span><span class=\"token punctuation\">(</span>BuildTarget<span class=\"token punctuation\">.</span>StandaloneWindows64<span class=\"token punctuation\">,</span> BuildTargetGroup<span class=\"token punctuation\">.</span>Standalone<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>                ScriptingImplementation<span class=\"token punctuation\">.</span>IL2CPP<span class=\"token punctuation\">,</span> <span class=\"token interpolation-string\"><span class=\"token string\">$\"</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span><span class=\"token expression language-csharp\">OutputPath_Windows</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">/</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span><span class=\"token expression language-csharp\">ApplicationName</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">.exe\"</span></span><span class=\"token punctuation\">,</span> <span class=\"token named-parameter punctuation\">bCleanBuild</span><span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>                <span class=\"token named-parameter punctuation\">bOutputIsFolderTarget</span><span class=\"token punctuation\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>        <span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">MenuItem</span><span class=\"token attribute-arguments\"><span class=\"token punctuation\">(</span><span class=\"token string\">\"Build/Export Android Project (IL2CPP)\"</span><span class=\"token punctuation\">)</span></span></span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">PerformBuild_AndroidProject</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>            EditorUserBuildSettings<span class=\"token punctuation\">.</span>exportAsGoogleAndroidProject <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>            <span class=\"token function\">PerformBuild</span><span class=\"token punctuation\">(</span>BuildTarget<span class=\"token punctuation\">.</span>Android<span class=\"token punctuation\">,</span> BuildTargetGroup<span class=\"token punctuation\">.</span>Android<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>                ScriptingImplementation<span class=\"token punctuation\">.</span>IL2CPP<span class=\"token punctuation\">,</span> <span class=\"token interpolation-string\"><span class=\"token string\">$\"</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span><span class=\"token expression language-csharp\">OutputPath_Android</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">/</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span><span class=\"token expression language-csharp\">ApplicationName</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">,</span> <span class=\"token named-parameter punctuation\">bCleanBuild</span><span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>                <span class=\"token named-parameter punctuation\">bOutputIsFolderTarget</span><span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">PerformBuild</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">BuildTarget</span> TargetPlatform<span class=\"token punctuation\">,</span> <span class=\"token class-name\">BuildTargetGroup</span> TargetGroup<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>            <span class=\"token class-name\">ScriptingImplementation</span> BackendScriptImpl<span class=\"token punctuation\">,</span> <span class=\"token class-name\"><span class=\"token keyword\">string</span></span> OutputTarget<span class=\"token punctuation\">,</span> <span class=\"token class-name\"><span class=\"token keyword\">bool</span></span> bCleanBuild <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>            <span class=\"token class-name\"><span class=\"token keyword\">bool</span></span> bOutputIsFolderTarget <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>bCleanBuild<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>            <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>                <span class=\"token function\">DeletePlatformBuildFolder</span><span class=\"token punctuation\">(</span>TargetPlatform<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>            </pre></td></tr><tr><td data-num=\"54\"></td><td><pre>            <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> buildPlayerOptions <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">BuildPlayerOptions</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>            buildPlayerOptions<span class=\"token punctuation\">.</span>scenes <span class=\"token operator\">=</span> <span class=\"token function\">GetBuildSceneList</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>            buildPlayerOptions<span class=\"token punctuation\">.</span>locationPathName <span class=\"token operator\">=</span> <span class=\"token function\">GetOutputTarget</span><span class=\"token punctuation\">(</span>TargetPlatform<span class=\"token punctuation\">,</span> OutputTarget<span class=\"token punctuation\">,</span> bOutputIsFolderTarget<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>            buildPlayerOptions<span class=\"token punctuation\">.</span>target <span class=\"token operator\">=</span> TargetPlatform<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>            buildPlayerOptions<span class=\"token punctuation\">.</span>options <span class=\"token operator\">=</span> BuildOptions<span class=\"token punctuation\">.</span>CleanBuildCache<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>            PlayerSettings<span class=\"token punctuation\">.</span><span class=\"token function\">SetScriptingBackend</span><span class=\"token punctuation\">(</span>TargetGroup<span class=\"token punctuation\">,</span> BackendScriptImpl<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>            <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> report <span class=\"token operator\">=</span> BuildPipeline<span class=\"token punctuation\">.</span><span class=\"token function\">BuildPlayer</span><span class=\"token punctuation\">(</span>buildPlayerOptions<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>            <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> summary <span class=\"token operator\">=</span> report<span class=\"token punctuation\">.</span>summary<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>summary<span class=\"token punctuation\">.</span>result <span class=\"token operator\">==</span> BuildResult<span class=\"token punctuation\">.</span>Succeeded<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>                Debug<span class=\"token punctuation\">.</span><span class=\"token function\">Log</span><span class=\"token punctuation\">(</span><span class=\"token interpolation-string\"><span class=\"token string\">$\"</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span><span class=\"token expression language-csharp\">DEBUG_FLAG</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\"> Build succeed, size: </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span><span class=\"token expression language-csharp\">summary<span class=\"token punctuation\">.</span>totalSize</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\"> bytes\"</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>summary<span class=\"token punctuation\">.</span>result <span class=\"token operator\">==</span> BuildResult<span class=\"token punctuation\">.</span>Failed<span class=\"token punctuation\">)</span> Debug<span class=\"token punctuation\">.</span><span class=\"token function\">Log</span><span class=\"token punctuation\">(</span><span class=\"token interpolation-string\"><span class=\"token string\">$\"</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span><span class=\"token expression language-csharp\">DEBUG_FLAG</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\"> Build failed\"</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>        <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">string</span></span> <span class=\"token function\">GetPlatformOutputFolder</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">BuildTarget</span> TargetPlatform<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>            <span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span>TargetPlatform<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>            <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>                <span class=\"token keyword\">case</span> BuildTarget<span class=\"token punctuation\">.</span>Android<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>                    <span class=\"token keyword\">return</span> <span class=\"token interpolation-string\"><span class=\"token string\">$\"</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span><span class=\"token expression language-csharp\">OutputBasePath</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">/</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span><span class=\"token expression language-csharp\">OutputPath_Android</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>                <span class=\"token keyword\">case</span> BuildTarget<span class=\"token punctuation\">.</span>StandaloneWindows64<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>                    <span class=\"token keyword\">return</span> <span class=\"token interpolation-string\"><span class=\"token string\">$\"</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span><span class=\"token expression language-csharp\">OutputBasePath</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">/</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span><span class=\"token expression language-csharp\">OutputPath_Windows</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre></pre></td></tr><tr><td data-num=\"80\"></td><td><pre>            <span class=\"token keyword\">return</span> INVALID_FLAG<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre>        </pre></td></tr><tr><td data-num=\"83\"></td><td><pre>        <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">DeletePlatformBuildFolder</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">BuildTarget</span> TargetPlatform<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"84\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"85\"></td><td><pre>            <span class=\"token class-name\"><span class=\"token keyword\">string</span></span> platformOutputPath <span class=\"token operator\">=</span> <span class=\"token function\">GetPlatformOutputFolder</span><span class=\"token punctuation\">(</span>TargetPlatform<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"86\"></td><td><pre>            <span class=\"token class-name\"><span class=\"token keyword\">string</span></span> platformOutputFullPath <span class=\"token operator\">=</span></pre></td></tr><tr><td data-num=\"87\"></td><td><pre>                platformOutputPath <span class=\"token operator\">!=</span> <span class=\"token return-type class-name\">INVALID_FLAG <span class=\"token punctuation\">?</span></span> Path<span class=\"token punctuation\">.</span><span class=\"token function\">GetFullPath</span><span class=\"token punctuation\">(</span>platformOutputPath<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">:</span> INVALID_FLAG<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"88\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>Directory<span class=\"token punctuation\">.</span><span class=\"token function\">Exists</span><span class=\"token punctuation\">(</span>platformOutputFullPath<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> Directory<span class=\"token punctuation\">.</span><span class=\"token function\">Delete</span><span class=\"token punctuation\">(</span>platformOutputFullPath<span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"89\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"90\"></td><td><pre></pre></td></tr><tr><td data-num=\"91\"></td><td><pre>        <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">string</span></span> <span class=\"token function\">GetOutputTarget</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">BuildTarget</span> TargetPlatform<span class=\"token punctuation\">,</span> <span class=\"token class-name\"><span class=\"token keyword\">string</span></span> TargetPath<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"92\"></td><td><pre>            <span class=\"token class-name\"><span class=\"token keyword\">bool</span></span> bTargetIsFolder <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"93\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"94\"></td><td><pre>            <span class=\"token class-name\"><span class=\"token keyword\">string</span></span> PlatformOutFolder <span class=\"token operator\">=</span> <span class=\"token function\">GetPlatformOutputFolder</span><span class=\"token punctuation\">(</span>TargetPlatform<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"95\"></td><td><pre>            <span class=\"token class-name\"><span class=\"token keyword\">string</span></span> resultPath <span class=\"token operator\">=</span> Path<span class=\"token punctuation\">.</span><span class=\"token function\">Combine</span><span class=\"token punctuation\">(</span>OutputBasePath<span class=\"token punctuation\">,</span> TargetPath<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"96\"></td><td><pre>            Debug<span class=\"token punctuation\">.</span><span class=\"token function\">Log</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"97\"></td><td><pre>                <span class=\"token interpolation-string\"><span class=\"token string\">$\"</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span><span class=\"token expression language-csharp\">DEBUG_FLAG</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\"> result path: </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span><span class=\"token expression language-csharp\">resultPath</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">, platformFolder: </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span><span class=\"token expression language-csharp\">PlatformOutFolder</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">, platform fullPath:</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span><span class=\"token expression language-csharp\">Path<span class=\"token punctuation\">.</span><span class=\"token function\">GetFullPath</span><span class=\"token punctuation\">(</span>PlatformOutFolder<span class=\"token punctuation\">)</span></span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"98\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>Directory<span class=\"token punctuation\">.</span><span class=\"token function\">Exists</span><span class=\"token punctuation\">(</span>Path<span class=\"token punctuation\">.</span><span class=\"token function\">GetFullPath</span><span class=\"token punctuation\">(</span>PlatformOutFolder<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> Directory<span class=\"token punctuation\">.</span><span class=\"token function\">CreateDirectory</span><span class=\"token punctuation\">(</span>PlatformOutFolder<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"99\"></td><td><pre><span class=\"token preprocessor property\">#<span class=\"token directive keyword\">if</span> UNITY_IOS</span></pre></td></tr><tr><td data-num=\"100\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>Directory<span class=\"token punctuation\">.</span><span class=\"token function\">Exists</span><span class=\"token punctuation\">(</span><span class=\"token interpolation-string\"><span class=\"token string\">$\"</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span><span class=\"token expression language-csharp\">resultPath</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">/Unity-iPhone/Images.xcassets/LaunchImage.launchimage\"</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"101\"></td><td><pre>            <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"102\"></td><td><pre>                Directory<span class=\"token punctuation\">.</span><span class=\"token function\">CreateDirectory</span><span class=\"token punctuation\">(</span><span class=\"token interpolation-string\"><span class=\"token string\">$\"</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span><span class=\"token expression language-csharp\">resultPath</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">/Unity-iPhone/Images.xcassets/LaunchImage.launchimage\"</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"103\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"104\"></td><td><pre><span class=\"token preprocessor property\">#<span class=\"token directive keyword\">endif</span></span></pre></td></tr><tr><td data-num=\"105\"></td><td><pre>            <span class=\"token keyword\">return</span> resultPath<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"106\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"107\"></td><td><pre></pre></td></tr><tr><td data-num=\"108\"></td><td><pre>        <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">string</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span> <span class=\"token function\">GetBuildSceneList</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"109\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"110\"></td><td><pre>            <span class=\"token class-name\">List<span class=\"token punctuation\">&lt;</span><span class=\"token keyword\">string</span><span class=\"token punctuation\">></span></span> sceneList <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">List<span class=\"token punctuation\">&lt;</span><span class=\"token keyword\">string</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"111\"></td><td><pre>            <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"112\"></td><td><pre>                <span class=\"token string\">\"Assets/Scene/SampleScene.unity\"</span></pre></td></tr><tr><td data-num=\"113\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"114\"></td><td><pre>            <span class=\"token keyword\">return</span> sceneList<span class=\"token punctuation\">.</span><span class=\"token function\">ToArray</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"115\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"116\"></td><td><pre>        </pre></td></tr><tr><td data-num=\"117\"></td><td><pre>        <span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">MenuItem</span><span class=\"token attribute-arguments\"><span class=\"token punctuation\">(</span><span class=\"token string\">\"Build/Print Debug Info\"</span><span class=\"token punctuation\">,</span> priority <span class=\"token operator\">=</span> <span class=\"token number\">100</span><span class=\"token punctuation\">)</span></span></span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"118\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">PrintDebugInfo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"119\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"120\"></td><td><pre>            <span class=\"token keyword\">foreach</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">var</span></span> scene_name <span class=\"token keyword\">in</span> <span class=\"token function\">GetBuildSceneList</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"121\"></td><td><pre>            <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"122\"></td><td><pre>                Debug<span class=\"token punctuation\">.</span><span class=\"token function\">Log</span><span class=\"token punctuation\">(</span><span class=\"token interpolation-string\"><span class=\"token string\">$\"</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span><span class=\"token expression language-csharp\">DEBUG_FLAG</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\"> Pre Build Scene: </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span><span class=\"token expression language-csharp\">scene_name</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"123\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"124\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"125\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"126\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h2 id=\"安装与配置-teamcity-server\"><a class=\"anchor\" href=\"#安装与配置-teamcity-server\">#</a> 安装与配置 TeamCity Server</h2>\n<h3 id=\"在-portainer-中安装-teamcity-server\"><a class=\"anchor\" href=\"#在-portainer-中安装-teamcity-server\">#</a> 在 Portainer 中安装 teamcity-server</h3>\n<p>以下是 yaml 内容</p>\n<figure class=\"highlight yaml\"><figcaption data-lang=\"YAML\"><span>l</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">---</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token key atrule\">version</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"3\"</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token key atrule\">services</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token key atrule\">teamcity-server</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token key atrule\">image</span><span class=\"token punctuation\">:</span> jetbrains/teamcity<span class=\"token punctuation\">-</span>server<span class=\"token punctuation\">:</span>2022.10.2</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token key atrule\">container_name</span><span class=\"token punctuation\">:</span> teamcity<span class=\"token punctuation\">-</span>server</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token key atrule\">volumes</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>      <span class=\"token comment\"># these two folder must be valid and approved, maybe use chown -R 1000:1000 </span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>      <span class=\"token punctuation\">-</span> /d/Work/Docker/DockerProgram/teamcity_server/datadir<span class=\"token punctuation\">:</span>/data/teamcity_server/datadir</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>      <span class=\"token punctuation\">-</span> /d/Work/Docker/DockerProgram/teamcity_server/logs<span class=\"token punctuation\">:</span>/opt/teamcity/logs</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token key atrule\">ports</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>      <span class=\"token punctuation\">-</span> 8003<span class=\"token punctuation\">:</span><span class=\"token number\">8111</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token key atrule\">networks</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>      <span class=\"token key atrule\">docker_net</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token key atrule\">ipv4_address</span><span class=\"token punctuation\">:</span> 172.20.0.5</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token key atrule\">restart</span><span class=\"token punctuation\">:</span> unless<span class=\"token punctuation\">-</span>stopped </pre></td></tr><tr><td data-num=\"17\"></td><td><pre>  <span class=\"token comment\"># teamcity-agent:</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token comment\"># image: jetbrains/teamcity-agent:2022.10.2</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token comment\"># container_name: teamcity-agent</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token comment\"># volumes:</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>      <span class=\"token comment\"># # these two folder must be valid and approved, maybe use chown -R 1000:1000</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>      <span class=\"token comment\"># - /mnt/HDD/docker_program/teamcity_agent/config:/data/teamcity_agent/conf</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token comment\"># # environment:</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>      <span class=\"token comment\"># # this is device real ip not docker inner ip</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>      <span class=\"token comment\"># # SERVER_URL: '192.168.50.11:8003'</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token key atrule\">networks</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>  <span class=\"token key atrule\">docker_net</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>      <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> docker_net</pre></td></tr></table></figure><p><strong>不推荐</strong>在 docker 中安装 teamcity-agent。</p>\n<p>安装后可以看到 teamcity-server 在正常运行</p>\n<p><img loading=\"lazy\" data-src=\"https://cdn.jsdelivr.net/gh/maikuraki/jsdelivr@v0.0.6/docimg/UnityBuildPipelineTutorial/tutorial_13.png\" alt=\"Tutorial_13\" /></p>\n<p>通过浏览器访问  <code>localhost:8003</code>  进入 teamcity-server 的管理页面，初始化创建账号后进入 teamcity</p>\n<h3 id=\"创建-teamcity-项目\"><a class=\"anchor\" href=\"#创建-teamcity-项目\">#</a> 创建 teamcity 项目</h3>\n<p><img loading=\"lazy\" data-src=\"https://cdn.jsdelivr.net/gh/maikuraki/jsdelivr@v0.0.6/docimg/UnityBuildPipelineTutorial/tutorial_14.png\" alt=\"Tutorial_14\" /></p>\n<p><img loading=\"lazy\" data-src=\"https://cdn.jsdelivr.net/gh/maikuraki/jsdelivr@v0.0.6/docimg/UnityBuildPipelineTutorial/tutorial_15.png\" alt=\"Tutorial_15\" /></p>\n<p>此处的  <code>http://localhost:8001/YOUR_USER_NAME/YOUR_PROJECT_NAME.git</code>  地址如果是以 localhost 作为地址，那么在 docker 容器中的 teamcity-server 拿到的  <code>localhost</code>  是 docker 内部的 ip 地址，需要根据你的实际情况替换成你的版本设备 ip，如果需要在同一个设备中使用 teamcity-server 与 gitlab 服务，请将  <code>localhost</code>  替换为 docker 内部 ip，比如  <code>http://172.20.0.4:8001/mai/DemoGame.git</code></p>\n<p><img loading=\"lazy\" data-src=\"https://cdn.jsdelivr.net/gh/maikuraki/jsdelivr@v0.0.6/docimg/UnityBuildPipelineTutorial/tutorial_16.png\" alt=\"Tutorial_16\" /></p>\n<h3 id=\"为-teamcity-server-配置-unity-build-plugin\"><a class=\"anchor\" href=\"#为-teamcity-server-配置-unity-build-plugin\">#</a> 为 teamcity-server 配置 Unity build plugin</h3>\n<ul>\n<li>\n<p>我们可以访问 github 或者 teamcity 官网下载</p>\n<ul>\n<li>\n<p><a href=\"https://github.com/JetBrains/teamcity-unity-plugin\">Github Page</a></p>\n</li>\n<li>\n<p><a href=\"https://plugins.jetbrains.com/plugin/11453-unity-support\">Teamcity Page</a></p>\n</li>\n</ul>\n</li>\n<li>\n<p>下载后得到  <code>plugin-unity-server.zip</code> ，点击  <code>[Administration]</code>  -&gt;  <code>[Plugins]</code>  -&gt;  <code> [Upload plugin zip]</code>  -&gt;  <code>[Enable uploaded plugins]</code>  安装并启用 teamcity-server 的 Unity Build 插件</p>\n</li>\n</ul>\n<p><img loading=\"lazy\" data-src=\"https://cdn.jsdelivr.net/gh/maikuraki/jsdelivr@v0.0.6/docimg/UnityBuildPipelineTutorial/tutorial_17.png\" alt=\"Tutorial_17\" /></p>\n<p><img loading=\"lazy\" data-src=\"https://cdn.jsdelivr.net/gh/maikuraki/jsdelivr@v0.0.6/docimg/UnityBuildPipelineTutorial/tutorial_18.png\" alt=\"Tutorial_18\" /></p>\n<p><img loading=\"lazy\" data-src=\"https://cdn.jsdelivr.net/gh/maikuraki/jsdelivr@v0.0.6/docimg/UnityBuildPipelineTutorial/tutorial_19.png\" alt=\"Tutorial_19\" /></p>\n<p><img loading=\"lazy\" data-src=\"https://cdn.jsdelivr.net/gh/maikuraki/jsdelivr@v0.0.6/docimg/UnityBuildPipelineTutorial/tutorial_20.png\" alt=\"Tutorial_20\" /></p>\n<ul>\n<li>安装好插件后，点击  <code>[Projects]</code>  -&gt;  <code>[Build Android]</code>  -&gt;  <code>[Edit configuration]</code>  -&gt;  <code>[Build Steps]</code>  来编辑 BuildStep</li>\n</ul>\n<p><img loading=\"lazy\" data-src=\"https://cdn.jsdelivr.net/gh/maikuraki/jsdelivr@v0.0.6/docimg/UnityBuildPipelineTutorial/tutorial_21.png\" alt=\"Tutorial_21\" /></p>\n<p><img loading=\"lazy\" data-src=\"https://cdn.jsdelivr.net/gh/maikuraki/jsdelivr@v0.0.6/docimg/UnityBuildPipelineTutorial/tutorial_22.png\" alt=\"Tutorial_22\" /></p>\n<p><img loading=\"lazy\" data-src=\"https://cdn.jsdelivr.net/gh/maikuraki/jsdelivr@v0.0.6/docimg/UnityBuildPipelineTutorial/tutorial_23.png\" alt=\"Tutorial_23\" /></p>\n<p><img loading=\"lazy\" data-src=\"https://cdn.jsdelivr.net/gh/maikuraki/jsdelivr@v0.0.6/docimg/UnityBuildPipelineTutorial/tutorial_24.png\" alt=\"Tutorial_24\" /></p>\n<ul>\n<li>点击  <code>[Add build step]</code>  搜索  <code>unity</code>  进入配置</li>\n</ul>\n<p><img loading=\"lazy\" data-src=\"https://cdn.jsdelivr.net/gh/maikuraki/jsdelivr@v0.0.6/docimg/UnityBuildPipelineTutorial/tutorial_25.png\" alt=\"Tutorial_25\" /></p>\n<p><img loading=\"lazy\" data-src=\"https://cdn.jsdelivr.net/gh/maikuraki/jsdelivr@v0.0.6/docimg/UnityBuildPipelineTutorial/tutorial_26.png\" alt=\"Tutorial_26\" /></p>\n<ul>\n<li>选择 Project Path 与  <code>BuildScript.cs</code>  中的打包方法</li>\n</ul>\n<p><img loading=\"lazy\" data-src=\"https://cdn.jsdelivr.net/gh/maikuraki/jsdelivr@v0.0.6/docimg/UnityBuildPipelineTutorial/tutorial_27.png\" alt=\"Tutorial_27\" /></p>\n<p><img loading=\"lazy\" data-src=\"https://cdn.jsdelivr.net/gh/maikuraki/jsdelivr@v0.0.6/docimg/UnityBuildPipelineTutorial/tutorial_28.png\" alt=\"Tutorial_28\" /></p>\n<ul>\n<li>添加命令行参数</li>\n</ul>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"><span>h</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ <span class=\"token parameter variable\">-nographics</span> <span class=\"token parameter variable\">-logFile</span> -</pre></td></tr></table></figure><p><img loading=\"lazy\" data-src=\"https://cdn.jsdelivr.net/gh/maikuraki/jsdelivr@v0.0.6/docimg/UnityBuildPipelineTutorial/tutorial_29.png\" alt=\"Tutorial_29\" /></p>\n<p><img loading=\"lazy\" data-src=\"https://cdn.jsdelivr.net/gh/maikuraki/jsdelivr@v0.0.6/docimg/UnityBuildPipelineTutorial/tutorial_30.png\" alt=\"Tutorial_30\" /></p>\n<ul>\n<li>回到 General Settings 配置打包输出路径</li>\n</ul>\n<p><img loading=\"lazy\" data-src=\"https://cdn.jsdelivr.net/gh/maikuraki/jsdelivr@v0.0.6/docimg/UnityBuildPipelineTutorial/tutorial_31.png\" alt=\"Tutorial_31\" /></p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"><span>h</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ DemoGame_Unity/Build/Android <span class=\"token operator\">=</span><span class=\"token operator\">></span> Build-Android</pre></td></tr></table></figure><p>此处  <code>DemoGame_Unity/Build/Android</code>  输出路径可以在 Unity 项目的 BuildScript.cs 中更改</p>\n<h2 id=\"安装与配置-teamcity-agent\"><a class=\"anchor\" href=\"#安装与配置-teamcity-agent\">#</a> 安装与配置 TeamCity Agent</h2>\n<p>TeamCity Agent 是实际用来控制打包机器的程序，它会直接调设备中的 Unity 程序来进行项目打包。</p>\n<h3 id=\"安装-teamcity-windows\"><a class=\"anchor\" href=\"#安装-teamcity-windows\">#</a> 安装 TeamCity Windows</h3>\n<p><a href=\"https://www.jetbrains.com/teamcity/download/\">Download TeamCity</a></p>\n<p>安装完成后自动配置时，建议使用系统账号，windows 的 user 账号可能会有权限不足的报错</p>\n<p><img loading=\"lazy\" data-src=\"https://cdn.jsdelivr.net/gh/maikuraki/jsdelivr@v0.0.6/docimg/UnityBuildPipelineTutorial/tutorial_35.png\" alt=\"Tutorial_35\" /></p>\n<p>假如安装路径是  <code>D:\\Software\\TeamCity</code></p>\n<p>修改  <code>D:\\Software\\TeamCity\\buildAgent\\conf</code>  路径下文件  <code>buildAgent.dist.properties</code>  大约第 9 行改为  <code>serverUrl=http://localhost:8003/</code> ，并且在文件底部添加两行配置</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"><span>h</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token assign-left variable\">unity.path</span><span class=\"token operator\">=</span>D:<span class=\"token punctuation\">\\</span>Software<span class=\"token punctuation\">\\</span>Unity<span class=\"token punctuation\">\\</span>Editor</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token assign-left variable\">env.UNITY_HINT_PATH</span><span class=\"token operator\">=</span>D:<span class=\"token punctuation\">\\</span>Software<span class=\"token punctuation\">\\</span>Unity<span class=\"token punctuation\">\\</span>Editor</pre></td></tr></table></figure><p>注意  <code>D:\\Software\\Unity\\Editor</code>  是 UnityHub 中设置的 Unity Editor 安装路径</p>\n<p><img loading=\"lazy\" data-src=\"https://cdn.jsdelivr.net/gh/maikuraki/jsdelivr@v0.0.6/docimg/UnityBuildPipelineTutorial/tutorial_32.png\" alt=\"Tutorial_32\" /></p>\n<p>修改  <code>D:\\Software\\TeamCity\\buildAgent\\conf</code>  路径下文件  <code>buildAgent.properties</code>  内容，大约第 1 行改为  <code>serverUrl=http\\://localhost\\:8003</code></p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"><span>h</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token assign-left variable\">serverUrl</span><span class=\"token operator\">=</span>http<span class=\"token punctuation\">\\</span>://localhost<span class=\"token punctuation\">\\</span>:8003</pre></td></tr></table></figure><p>如果  <code>buildAgent.properties</code>  文件内容类似下图，那么配置文件应该是没有问题了</p>\n<p><img loading=\"lazy\" data-src=\"https://cdn.jsdelivr.net/gh/maikuraki/jsdelivr@v0.0.6/docimg/UnityBuildPipelineTutorial/tutorial_36.png\" alt=\"Tutorial_36\" /></p>\n<h3 id=\"启动-teamcity-agent\"><a class=\"anchor\" href=\"#启动-teamcity-agent\">#</a> 启动 TeamCity Agent</h3>\n<p>用命令行进入  <code>D:\\Software\\TeamCity\\buildAgent\\bin</code></p>\n<p><img loading=\"lazy\" data-src=\"https://cdn.jsdelivr.net/gh/maikuraki/jsdelivr@v0.0.6/docimg/UnityBuildPipelineTutorial/tutorial_33.png\" alt=\"Tutorial_33\" /></p>\n<p>输入命令  <code>./agent.bat start</code>  启动 TeamCity Agent</p>\n<p><img loading=\"lazy\" data-src=\"https://cdn.jsdelivr.net/gh/maikuraki/jsdelivr@v0.0.6/docimg/UnityBuildPipelineTutorial/tutorial_34.png\" alt=\"Tutorial_34\" /></p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"><span>h</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ ./agent.bat start</pre></td></tr></table></figure><h2 id=\"在-teamcity-server-中完成项目配置\"><a class=\"anchor\" href=\"#在-teamcity-server-中完成项目配置\">#</a> 在 TeamCity Server 中完成项目配置</h2>\n<h3 id=\"注册并启用-agent\"><a class=\"anchor\" href=\"#注册并启用-agent\">#</a> 注册并启用 Agent</h3>\n<p>浏览器访问  <code>http://localhost:8003</code>  访问  <code>[Agents]</code>  -&gt;  <code>[Unauthorized]</code>  在右侧分别点击  <code>[Authorize]</code>  与  <code>[Enable]</code>  来注册和启动打包机</p>\n<p><img loading=\"lazy\" data-src=\"https://cdn.jsdelivr.net/gh/maikuraki/jsdelivr@v0.0.6/docimg/UnityBuildPipelineTutorial/tutorial_37.png\" alt=\"Tutorial_37\" /></p>\n<h3 id=\"开始打包\"><a class=\"anchor\" href=\"#开始打包\">#</a> 开始打包</h3>\n<p>回到  <code>[Project]</code>  点击  <code>[Run]</code>  开始打包</p>\n<p><img loading=\"lazy\" data-src=\"https://cdn.jsdelivr.net/gh/maikuraki/jsdelivr@v0.0.6/docimg/UnityBuildPipelineTutorial/tutorial_38.png\" alt=\"Tutorial_38\" /></p>\n<h2 id=\"issues\"><a class=\"anchor\" href=\"#issues\">#</a> Issues</h2>\n<h3 id=\"连接-git-失败\"><a class=\"anchor\" href=\"#连接-git-失败\">#</a> 连接 git 失败</h3>\n<p>如果我们完全按照上文创建 gitlab 与 teamcity-server，在 windows 端的 docker 中同时运行 teamcity-server 和 gitlab 会出现找不到打包地址的问题</p>\n<p><img loading=\"lazy\" data-src=\"https://cdn.jsdelivr.net/gh/maikuraki/jsdelivr@v0.0.6/docimg/UnityBuildPipelineTutorial/tutorial_42.png\" alt=\"Tutorial_42\" /></p>\n<p>目前尚未知原因，我的解决办法是在本地局域网内另一台设备部署了 gitlab 服务，将 teamcity-server 中的地址替换为局域网内另一台机器的真实 ip，然后再次打包即可成功。还可以在安装 teamcity-agent 的时候同时选择安装 windows 版的 teamcity-server，应该也可以解决同机器无法访问 git 的问题。</p>\n<p><img loading=\"lazy\" data-src=\"https://cdn.jsdelivr.net/gh/maikuraki/jsdelivr@v0.0.6/docimg/UnityBuildPipelineTutorial/tutorial_39.png\" alt=\"Tutorial_39\" /></p>\n<p><img loading=\"lazy\" data-src=\"https://cdn.jsdelivr.net/gh/maikuraki/jsdelivr@v0.0.6/docimg/UnityBuildPipelineTutorial/tutorial_40.png\" alt=\"Tutorial_40\" /></p>\n<p><img loading=\"lazy\" data-src=\"https://cdn.jsdelivr.net/gh/maikuraki/jsdelivr@v0.0.6/docimg/UnityBuildPipelineTutorial/tutorial_41.png\" alt=\"Tutorial_41\" /></p>\n<h3 id=\"找不到-unity\"><a class=\"anchor\" href=\"#找不到-unity\">#</a> 找不到 unity</h3>\n<p><code>Failed to start build runner 'unity'</code></p>\n<p><img loading=\"lazy\" data-src=\"https://cdn.jsdelivr.net/gh/maikuraki/jsdelivr@v0.0.6/docimg/UnityBuildPipelineTutorial/tutorial_43.png\" alt=\"Tutorial_43\" /></p>\n<p>遇到这个问题请用命令行进入  <code>D:\\Software\\TeamCity\\buildAgent\\bin</code></p>\n<p>重新输入  <code>./agent.bat stop</code>   <code>./agent.bat start</code>  这两条命令解决，它会重启并应用配置文件中的 unity 路径配置。</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"><span>h</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ ./agent.bat stop</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>$ ./agent.bat start</pre></td></tr></table></figure><p><img loading=\"lazy\" data-src=\"https://cdn.jsdelivr.net/gh/maikuraki/jsdelivr@v0.0.6/docimg/UnityBuildPipelineTutorial/tutorial_44.png\" alt=\"Tutorial_44\" /></p>\n",
            "tags": []
        },
        {
            "id": "http://example.com/2024/10/07/hello-world/",
            "url": "http://example.com/2024/10/07/hello-world/",
            "title": "Hello World",
            "date_published": "2024-10-06T17:30:38.003Z",
            "content_html": "<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>\n<h2 id=\"quick-start\"><a class=\"anchor\" href=\"#quick-start\">#</a> Quick Start</h2>\n<h3 id=\"create-a-new-post\"><a class=\"anchor\" href=\"#create-a-new-post\">#</a> Create a new post</h3>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"><span>h</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ hexo new <span class=\"token string\">\"My New Post\"</span></pre></td></tr></table></figure><p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\n<h3 id=\"run-server\"><a class=\"anchor\" href=\"#run-server\">#</a> Run server</h3>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"><span>h</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ hexo server</pre></td></tr></table></figure><p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h3 id=\"generate-static-files\"><a class=\"anchor\" href=\"#generate-static-files\">#</a> Generate static files</h3>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"><span>h</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ hexo generate</pre></td></tr></table></figure><p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h3 id=\"deploy-to-remote-sites\"><a class=\"anchor\" href=\"#deploy-to-remote-sites\">#</a> Deploy to remote sites</h3>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"><span>h</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ hexo deploy</pre></td></tr></table></figure><p>More info: <a href=\"https://hexo.io/docs/one-command-deployment.html\">Deployment</a></p>\n",
            "tags": []
        },
        {
            "id": "http://example.com/2024/10/06/Clean_Linux/",
            "url": "http://example.com/2024/10/06/Clean_Linux/",
            "title": "清理 Linux 磁盘",
            "date_published": "2024-10-05T21:18:18.749Z",
            "content_html": "<pre><code>由于作者购买的 VPS 硬盘太小经常由于磁盘爆满报错，发现长时间运行 Linux 会记录太多时间过于久远的日志。本文以 debian / archlinux 以及 systemd 系的通用 linux 命令为例，记录整理一些可以删除的较大日志文件。\n</code></pre>\n<h2 id=\"检查磁盘空间\"><a class=\"anchor\" href=\"#检查磁盘空间\">#</a> 检查磁盘空间</h2>\n<ul>\n<li>检查磁盘空间</li>\n</ul>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"><span>h</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">df</span> <span class=\"token parameter variable\">-h</span></pre></td></tr></table></figure><ul>\n<li>使用 du 命令查找  <code>/</code>  目录哪些文件和目录占用了大量空间：</li>\n</ul>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"><span>h</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">sudo</span> <span class=\"token function\">du</span> <span class=\"token parameter variable\">-h</span> --max-depth<span class=\"token operator\">=</span><span class=\"token number\">1</span> / <span class=\"token operator\">|</span> <span class=\"token function\">sort</span> <span class=\"token parameter variable\">-hr</span> <span class=\"token operator\">|</span> <span class=\"token function\">head</span> <span class=\"token parameter variable\">-n</span> <span class=\"token number\">10</span></pre></td></tr></table></figure><ul>\n<li>例：\n<ul>\n<li>检查  <code>/var</code>  目录</li>\n<li>检查用户目录下的文件</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"><span>h</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">sudo</span> <span class=\"token function\">du</span> <span class=\"token parameter variable\">-h</span> --max-depth<span class=\"token operator\">=</span><span class=\"token number\">1</span> /var <span class=\"token operator\">|</span> <span class=\"token function\">sort</span> <span class=\"token parameter variable\">-hr</span> <span class=\"token operator\">|</span> <span class=\"token function\">head</span> <span class=\"token parameter variable\">-n</span> <span class=\"token number\">10</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">## home 目录不需要 sudo</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token function\">du</span> <span class=\"token parameter variable\">-h</span> --max-depth<span class=\"token operator\">=</span><span class=\"token number\">1</span> ~ <span class=\"token operator\">|</span> <span class=\"token function\">sort</span> <span class=\"token parameter variable\">-hr</span> <span class=\"token operator\">|</span> <span class=\"token function\">head</span> <span class=\"token parameter variable\">-n</span> <span class=\"token number\">10</span></pre></td></tr></table></figure><h2 id=\"journalsystemd-日志\"><a class=\"anchor\" href=\"#journalsystemd-日志\">#</a> journal（systemd 日志）</h2>\n<p><code>/var/log/journal</code>  目录中的日志文件可能占用了大量空间。你可以清理这些文件。</p>\n<ol>\n<li>将日志文件归档或删除：</li>\n</ol>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"><span>h</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">sudo</span> journalctl --vacuum-time<span class=\"token operator\">=</span>1d</pre></td></tr></table></figure><ol start=\"2\">\n<li>根据磁盘空间限制清理：</li>\n</ol>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"><span>h</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">sudo</span> journalctl --vacuum-size<span class=\"token operator\">=</span>100M</pre></td></tr></table></figure><ol start=\"4\">\n<li>禁用  <code>systemd</code>  的持久化日志：</li>\n</ol>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"><span>h</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">sudo</span> <span class=\"token function\">rm</span> <span class=\"token parameter variable\">-rf</span> /var/log/journal</pre></td></tr></table></figure><ol start=\"4\">\n<li>限制 journal 的大小：</li>\n</ol>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"><span>h</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">sudo</span> <span class=\"token function\">nano</span> /etc/systemd/journald.conf</pre></td></tr></table></figure><ol start=\"5\">\n<li>将以下行取消注释并设置合适的大小限制（比如 50M）：</li>\n</ol>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"><span>h</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token assign-left variable\">SystemMaxUse</span><span class=\"token operator\">=</span>50M</pre></td></tr></table></figure><ol start=\"6\">\n<li>禁用 systemd 的持久化日志</li>\n</ol>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"><span>h</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token assign-left variable\">Storage</span><span class=\"token operator\">=</span>volatile</pre></td></tr></table></figure><ol start=\"7\">\n<li>保存文件后重启 systemd-journald 服务：</li>\n</ol>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"><span>h</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">sudo</span> systemctl restart systemd-journald</pre></td></tr></table></figure><h2 id=\"docker\"><a class=\"anchor\" href=\"#docker\">#</a> docker</h2>\n<h3 id=\"配置\"><a class=\"anchor\" href=\"#配置\">#</a> 配置</h3>\n<ol>\n<li>编辑 Docker 配置文件：</li>\n</ol>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"><span>h</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">sudo</span> <span class=\"token function\">nano</span> /etc/docker/daemon.json</pre></td></tr></table></figure><ol start=\"2\">\n<li>添加或修改以下内容：</li>\n</ol>\n<figure class=\"highlight json\"><figcaption data-lang=\"JSON\"><span>n</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token property\">\"log-driver\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"json-file\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token property\">\"log-opts\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token property\">\"max-size\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"10m\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token property\">\"max-file\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"3\"</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><ol start=\"3\">\n<li>重启 Docker 服务：</li>\n</ol>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"><span>h</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">sudo</span> systemctl restart <span class=\"token function\">docker</span></pre></td></tr></table></figure><h3 id=\"清理\"><a class=\"anchor\" href=\"#清理\">#</a> 清理</h3>\n<ol>\n<li>使用以下命令可以删除未使用的镜像、容器、网络和数据卷：</li>\n</ol>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"><span>h</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">sudo</span> <span class=\"token function\">docker</span> system prune <span class=\"token parameter variable\">-a</span></pre></td></tr></table></figure><ol start=\"2\">\n<li>如果只想清理未使用的数据卷，可以使用：</li>\n</ol>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"><span>h</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">sudo</span> <span class=\"token function\">docker</span> volume prune</pre></td></tr></table></figure><ol start=\"3\">\n<li>如果你的构建过程中积累了大量的构建缓存，可以通过以下命令清理：</li>\n</ol>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"><span>h</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">sudo</span> <span class=\"token function\">docker</span> builder prune</pre></td></tr></table></figure><h2 id=\"linux-内核\"><a class=\"anchor\" href=\"#linux-内核\">#</a> Linux 内核</h2>\n<h3 id=\"debian\"><a class=\"anchor\" href=\"#debian\">#</a> debian</h3>\n<p>目前作者长期使用中的系统之一 (Debian)，升级会产生多个内核，旧版内核会保留一些，需要手动删除。Ubuntu 和 Deepin 没用过暂时不知。</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"><span>h</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>dpkg <span class=\"token parameter variable\">--list</span> <span class=\"token operator\">|</span> <span class=\"token function\">grep</span> linux-image</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">sudo</span> <span class=\"token function\">apt-get</span> remove <span class=\"token parameter variable\">--purge</span> linux-image-<span class=\"token operator\">&lt;</span>version<span class=\"token operator\">></span></pre></td></tr></table></figure><h3 id=\"archlinux\"><a class=\"anchor\" href=\"#archlinux\">#</a> archlinux</h3>\n<p>目前作者长期使用中的系统之一 (Archlinux / Manjaro) 依稀记得 Manjaro 是可以存在多个内核，Archlinux 在更新后会自动删除旧的内核，Archlinux 可能不需要特别清理。</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"><span>h</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>pacman <span class=\"token parameter variable\">-Q</span> <span class=\"token operator\">|</span> <span class=\"token function\">grep</span> linux</pre></td></tr></table></figure>",
            "tags": []
        },
        {
            "id": "http://example.com/2024/10/06/Game_Jam_Log/",
            "url": "http://example.com/2024/10/06/Game_Jam_Log/",
            "title": "Game Jam 记录",
            "date_published": "2024-10-05T20:54:17.583Z",
            "content_html": "<pre><code>本文是作者的 GameJam 记录。Video 来自 Vimeo，中国大陆可能需要翻墙访问。\n</code></pre>\n<h2 id=\"2021\"><a class=\"anchor\" href=\"#2021\">#</a> 2021</h2>\n<h3 id=\"studio-internal-公司内部\"><a class=\"anchor\" href=\"#studio-internal-公司内部\">#</a> Studio-Internal (公司内部)</h3>\n<p>&lt;div style=&quot;padding:56.25% 0 0 0;position:relative;&quot;&gt;&lt;iframe src=&quot;<a href=\"https://player.vimeo.com/video/803142386?h=b3329a1ea1&amp;amp;badge=0&amp;amp;autopause=0&amp;amp;player_id=0&amp;amp;app_id=58479\">https://player.vimeo.com/video/803142386?h=b3329a1ea1&amp;amp;badge=0&amp;amp;autopause=0&amp;amp;player_id=0&amp;amp;app_id=58479</a>&quot; frameborder=&quot;0&quot; allow=&quot;autoplay; fullscreen; picture-in-picture&quot; allowfullscreen style=&quot;position:absolute;top:0;left:0;width:100%;height:100%;&quot; title=&quot;GreenGameJam.mp4&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;script src=&quot;<a href=\"https://player.vimeo.com/api/player.js\">https://player.vimeo.com/api/player.js</a>&quot;&gt;&lt;/script&gt;</p>\n<h3 id=\"ciga-gamejam\"><a class=\"anchor\" href=\"#ciga-gamejam\">#</a> CIGA GameJam</h3>\n<p>&lt;div style=&quot;padding:75% 0 0 0;position:relative;&quot;&gt;&lt;iframe src=&quot;<a href=\"https://player.vimeo.com/video/803150021?h=d5e13086ca&amp;amp;badge=0&amp;amp;autopause=0&amp;amp;player_id=0&amp;amp;app_id=58479\">https://player.vimeo.com/video/803150021?h=d5e13086ca&amp;amp;badge=0&amp;amp;autopause=0&amp;amp;player_id=0&amp;amp;app_id=58479</a>&quot; frameborder=&quot;0&quot; allow=&quot;autoplay; fullscreen; picture-in-picture&quot; allowfullscreen style=&quot;position:absolute;top:0;left:0;width:100%;height:100%;&quot; title=&quot;Jam21S2.mp4&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;script src=&quot;<a href=\"https://player.vimeo.com/api/player.js\">https://player.vimeo.com/api/player.js</a>&quot;&gt;&lt;/script&gt;</p>\n<h3 id=\"2021-global-game-jam\"><a class=\"anchor\" href=\"#2021-global-game-jam\">#</a> 2021 Global Game Jam</h3>\n<p>&lt;div style=&quot;padding:56.25% 0 0 0;position:relative;&quot;&gt;&lt;iframe src=&quot;<a href=\"https://player.vimeo.com/video/827769293?h=6ec5dd84d2&amp;amp;badge=0&amp;amp;autopause=0&amp;amp;player_id=0&amp;amp;app_id=58479\">https://player.vimeo.com/video/827769293?h=6ec5dd84d2&amp;amp;badge=0&amp;amp;autopause=0&amp;amp;player_id=0&amp;amp;app_id=58479</a>&quot; frameborder=&quot;0&quot; allow=&quot;autoplay; fullscreen; picture-in-picture&quot; allowfullscreen style=&quot;position:absolute;top:0;left:0;width:100%;height:100%;&quot; title=&quot;Jam21S1&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;script src=&quot;<a href=\"https://player.vimeo.com/api/player.js\">https://player.vimeo.com/api/player.js</a>&quot;&gt;&lt;/script&gt;</p>\n<h3 id=\"2019-global-game-jam\"><a class=\"anchor\" href=\"#2019-global-game-jam\">#</a> 2019 Global Game Jam</h3>\n<p>&lt;div style=&quot;padding:56.25% 0 0 0;position:relative;&quot;&gt;&lt;iframe src=&quot;<a href=\"https://player.vimeo.com/video/827768385?h=5eedee871a&amp;amp;badge=0&amp;amp;autopause=0&amp;amp;player_id=0&amp;amp;app_id=58479\">https://player.vimeo.com/video/827768385?h=5eedee871a&amp;amp;badge=0&amp;amp;autopause=0&amp;amp;player_id=0&amp;amp;app_id=58479</a>&quot; frameborder=&quot;0&quot; allow=&quot;autoplay; fullscreen; picture-in-picture&quot; allowfullscreen style=&quot;position:absolute;top:0;left:0;width:100%;height:100%;&quot; title=&quot;Jam19S1&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;script src=&quot;<a href=\"https://player.vimeo.com/api/player.js\">https://player.vimeo.com/api/player.js</a>&quot;&gt;&lt;/script&gt;</p>\n",
            "tags": []
        }
    ]
}